name: snap
on:
  push:
    branches:
      - citadel
      - fortress
  pull_request:
    branches:
      - citadel
      - fortress
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      snap-file: ${{ steps.build-snap.outputs.snap }}
    steps:
    - uses: actions/checkout@v2
    - uses: JarvusInnovations/background-action@v1
      name: Bootstrap System Under Test (SUT)
      with:
        run: |
          ./scripts/log_stats.sh &

        wait-on: |
          file://done.txt
        # IMPORTANT: to use environment variables in wait-on, you must use this form: ${{ env.VAR }}
        # See wait-on section below for all resource types and prefixes

        tail: true # true = stderr,stdout
        # This will allow you to monitor the progress live

        log-output-resume: stderr
        # Eliminates previosuly output stderr log entries from post-run output

        wait-for: 100m

        log-output: stderr,stdout # same as true

        log-output-if: true
        # failure = exit-early or timeout

        working-directory: backend
        # sets the working directory (cwd) for the shell running commands

    - uses: snapcore/action-build@v1
      id: build-snap
      with:
        snapcraft-args: '--enable-experimental-extensions'
        snapcraft-channel: '7.x/candidate'

    - run: |
        touch done.txt

    # Make sure the snap is installable
    - run: |
        sudo snap install --dangerous ${{ steps.build-snap.outputs.snap }}

    # @todo Do some testing with the snap
    - run: |
        gazebo.gz gazebo --version

    - uses: actions/upload-artifact@v3
      with:
        name: gazebo-snap
        path: ${{ steps.build-snap.outputs.snap }}

  publish:
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/citadel')
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: gazebo-snap
        path: .
    - uses: snapcore/action-publish@v1
      env:
        SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_LOGIN }}
      with:
        snap: ${{ needs.build.outputs.snap-file }}
        release: citadel/edge
